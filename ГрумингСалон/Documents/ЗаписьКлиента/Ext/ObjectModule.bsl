
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движение = Движения.ЗаказыКлиентов.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.ЗаписьКлиента =Ссылка.Ссылка ;
	Движение.Сумма = Услуги.Итог("Стоимость");
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗначениеЗаполнено(Ссылка) И УслугаОказана = Ложь Тогда
		УслугаОказана = Документы.ЗаписьКлиента.ПроверитьОказаниеУслуг(Ссылка);
	КонецЕсли;
	
	ДлительностьУслуг = РассчитатьДатуОкончанияЗаписи();
	
	Если ДлительностьУслуг = 0 Тогда 
		ДлительностьУслуг = 60;
	КонецЕсли;
	
	ДатаОкончанияЗаписи = ДатаЗаписи + ДлительностьУслуг*60;
	
	
КонецПроцедуры 

Функция РассчитатьДатуОкончанияЗаписи()
	
	ТЧУслуги = Услуги.Выгрузить(,"Услуга");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЧУслуги", ТЧУслуги);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|    ТЧУслуги.Услуга КАК Услуга
	|ПОМЕСТИТЬ ВТ_Услуга
	|ИЗ
	|    &ТЧУслуги КАК ТЧУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    СУММА(Ном.ДлительностьУслуги) КАК ДлительностьУслуги
	|ИЗ
	|    ВТ_Услуга КАК ВТ_Услуга
	|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
	|        ПО ВТ_Услуга.Услуга = Ном.Ссылка";
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ДлительностьУслуги;
	
КонецФункции 

	


	



	
	
	




