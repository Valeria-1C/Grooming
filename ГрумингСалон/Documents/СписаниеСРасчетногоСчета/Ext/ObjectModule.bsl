Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДокументаОснования = ТипЗнч(ДанныеЗаполнения);
	ТипДокументаРеализацияТоваровИУслуг = Тип("ДокументСсылка.РеализацияТоваровИУслуг");
	ТипДокументаПоступлениеТоваровИМатериалов = Тип("ДокументСсылка.ПоступлениеТоваровИМатериалов");
	ТипДокументаПоступлениеУслуг = Тип("ДокументСсылка.ПоступлениеУслуг");
	
	ДанныеЗаполненияоснования = Новый Структура;
	Если ТипДокументаОснования = ТипДокументаРеализацияТоваровИУслуг Тогда 
		ДанныеЗаполненияОснования = ПолучитьДанныеПоРеализацииТоваровИУслуг(ДанныеЗаполнения);
	ИначеЕсли ТипДокументаОснования = ТипДокументаПоступлениеТоваровИМатериалов Тогда
		ДанныеЗаполненияОснования = ПолучитьДанныеПоПоступлениюТоваровИМатериалов(ДанныеЗаполнения);
	ИначеЕсли ТипДокументаОснования = ТипДокументаПоступлениеуслуг Тогда
		ДанныеЗаполненияОснования = ПолучитьДанныеПоступленияУслуг(ДанныеЗаполнения);
	КонецЕсли;
	
	ЗаполнитьЗначениясвойств(ЭтотОбъект, ДанныеЗаполненияОснования);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетныйСчет", РасчетныйСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК РасчетныйСчет,
	|	-ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки(
	|			&МоментВремени,
	|			БанковскийСчетКасса = &РасчетныйСчет
	|				И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)) КАК ДенежныеСредстваОстатки
	|ГДЕ
	|	ДенежныеСредстваОстатки.СуммаОстаток < 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("На счете ""%1"" недостаточно денежных средств для расхода в размере %2" ,Выборка.РасчетныйСчет, Выборка.Сумма);
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ДенежныеСредства.Записывать = Истина;
	Движение = Движения.ДенежныеСредства.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.БанковскийСчетКасса = РасчетныйСчет;
	Движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные; 
	
	Движения.Хозрасчетный.Записывать = Истина;
	Если ВидОперации <> Перечисления.ВидыОперацийСписанияСРасчетногоСчета.СнятиеНаличныхВКассу Тогда
		
		АналитикаПроводки = ПолучитьАналитикуПроводки();
		
		Движение = Движения.Хозрасчетный.Добавить();
		Движение.СчетДт = АналитикаПроводки.СчетДебета;
		Движение.СчетКт = АналитикаПроводки.СчетКредита;
		Движение.Период = Дата;
		Движение.Сумма = СуммаДокумента;
		Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
		БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
		БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("РасчетныйСчет", РасчетныйСчет);
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени(), ВидГраницы.Включая));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК РасчетныйСчет,
		|	-ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства.Остатки(
		|			&МоментВремени,
		|			БанковскийСчетКасса = &РасчетныйСчет
		|				И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)) КАК ДенежныеСредстваОстатки
		|ГДЕ
		|	ДенежныеСредстваОстатки.СуммаОстаток < 0";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Отказ = Истина;
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("На счете ""%1"" недостаточно денежных средств для расхода в размере %2" ,Выборка.РасчетныйСчет, Выборка.Сумма);
			Сообщение.Сообщить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеПоРеализацииТоваровИУслуг(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровИУслуг.Ссылка КАК ДокументОснование,
	|	РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|	РеализацияТоваровИУслуг.Клиент КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю) КАК ВидОперации
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|	РеализацияТоваровИУслуг.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
	
КонецФункции

Функция ПолучитьДанныеПоПоступлениюТоваровИМатериалов(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИМатериалов.Ссылка КАК ДокументОснование,
	|	ПоступлениеТоваровИМатериалов.Поставщик КАК Получатель,
	|	ПоступлениеТоваровИМатериалов.СуммаДокумента КАК СуммаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику) КАК ВидОперации,
	|	ПоступлениеТоваровИМатериалов.Договор КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.ПоступлениеТоваровИМатериалов КАК ПоступлениеТоваровИМатериалов
	|ГДЕ
	|	ПоступлениеТоваровИМатериалов.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Выборка.Следующий();
	Возврат Выборка;
	
КонецФункции

Функция ПолучитьДанныеПоступленияУслуг(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеУслуг.Ссылка КАК ДокументОснование,
	|	ПоступлениеУслуг.Поставщик КАК Получатель,
	|	ПоступлениеУслуг.ДоговорПоставщика КАК ДоговорКонтрагента,
	|	ПоступлениеУслуг.СуммаДокумента КАК СуммаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику) КАК ВидОперации
	|ИЗ
	|	Документ.ПоступлениеУслуг КАК ПоступлениеУслуг
	|ГДЕ
	|	ПоступлениеУслуг.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
КонецФункции

Функция ПолучитьАналитикуПроводки()
	
	ОплатаПоставщику = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику;
	ВозвратПокупателю = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю;
	ПеречислениеПодотчетномуЛицу = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеПодотчетномуЛицу;
	ПеречислениеЗаработнойПлаты = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеЗаработнойПлаты;
	
	СтруктураАналитики = Новый Структура;
	СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	СтруктураАналитики.Вставить("СубконтоКредит", РасчетныйСчет);
	Если ВидОперации = ОплатаПоставщику Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата поставщику с расчетного счета");
	ИначеЕсли ВидОперации = ВозвратПокупателю Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);    
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат средств покупателю с расчетного счета");
	ИначеЕсли ВидОперации = ПеречислениеПодотчетномуЛицу Тогда 
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Перечисление подотченику с расчетного счета");
	ИначеЕсли ВидОперации = ПеречислениеЗаработнойПлаты Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Выплата заработной платы на счет сотрудника");        
	КонецЕсли;
	
	Возврат СтруктураАналитики; 
КонецФункции



	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

