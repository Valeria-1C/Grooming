
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаписьКлиента") Тогда
		Клиент = ДанныеЗаполнения.Клиент;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Основание = ДанныеЗаполнения.Ссылка;
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Стоимость;
			НоваяСтрока.Услуга = ТекСтрокаУслуги.Услуга;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
	Если ЗначениеЗаполнено(Ссылка)
		И ПризнакОплаты <> Перечисления.ВидыОплатДокумента.ПолностьюОплачен Тогда
		СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Ссылка);
		ПризнакОплаты = СтруктураОплаты.ПризнакОплаты;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	Если Основание.Пустая()  Тогда
		Движения.ЗаказыКлиентов.Записывать = Ложь;
	Иначе
		Движения.ЗаказыКлиентов.Записывать = Истина;
	КонецЕсли;	
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.Хозрасчетный.Записывать = Истина;
	
	Движения.ТоварыНаСкладах.Записать();
	Движения.Продажи.Записать();
	Движения.УчетЗатрат.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Товар");
	//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровИУслугТовары.Товар КАК Номенклатура,
	|	РеализацияТоваровИУслуг.Склад КАК Склад,
	|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары,
	|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|	РеализацияТоваровИУслуг.Ссылка = &Ссылка
	|	И РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугТовары.Товар,
	|	РеализацияТоваровИУслуг.Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровИУслугУслуги.Услуга,
	|	РеализацияТоваровИУслугУслуги.Ссылка.Склад,
	|	1,
	|	СУММА(РеализацияТоваровИУслугУслуги.Сумма)
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	|ГДЕ
	|	РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугУслуги.Услуга,
	|	РеализацияТоваровИУслугУслуги.Ссылка.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ВТ_Товары.Количество КАК КоличествоВДокументе,
	|	ВТ_Товары.Сумма КАК СуммаВДокументе,
	|	ВТ_Товары.Склад КАК Склад,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокГодности,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ВТ_Товары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&МоментВремени,
	|				(Номенклатура, Склад) В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Номенклатура,
	|						ВТ_Товары.Склад
	|					ИЗ
	|						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	|		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.СрокГодности
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВДокументе),
	|	МАКСИМУМ(СуммаВДокументе),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени())); 
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл;
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			СтоимостьОбщая = 0;
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			
			Если Превышение > 0
				И Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1"" в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();
				Отказ = Истина;
				
				Если Отказ Тогда;
					Продолжить;
				КонецЕсли;
				
			ИначеЕсли Превышение > 0 
				И Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() = Ложь Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1"" в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();	
			КонецЕсли;
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл
				Списываем = Мин(ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
				
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
				Движение.Склад = ВыборкаДетальные.Склад;
				Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
				Движение.Количество = Списываем;
				
				Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
					СуммаСписания = ВыборкаДетальные.СуммаОстаток;
				Иначе
					СуммаСписания = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
				КонецЕсли;
				
				Движение.Сумма = СуммаСписания;
				
				ОсталосьСписать = ОсталосьСписать - Списываем;
				СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;	
			КонецЦикла;
			
			Движение = Движения.УчетЗатрат.Добавить();
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая;		
		Иначе	
			Движение = Движения.ЗаказыКлиентов.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Клиент = Клиент;
			Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
         	Движение.ЗаписьКлиента = Основание;	
		КонецЕсли;
		
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Сотрудники = Сотрудник;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;	
	КонецЦикла;
	 	 
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Клиент);
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг"; 
			
КонецПроцедуры




